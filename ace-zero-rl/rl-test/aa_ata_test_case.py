from unittest import TestCaseimport sysimport mathimport rl_utilsfrom ace_zero_core import utils
class Fighter(object):    def __init__(self, x, y, psi, v=100):        self.x = x        self.y = y        self.z = 0        self.v = v        self.theta = 0        self.psi = psiclass AA_ATA_TestCase(TestCase):
    def calculate_actual_R_ata_aa_atan(self, blue, red):        dx = red.x - blue.x        dy = red.y - blue.y        R = math.sqrt(dx * dx + dy * dy)        atan = math.atan2(dy, dx) * 180 / math.pi        ata = blue.psi - atan        if ata > 180:            ata -= 360        aa = red.psi - atan        if aa > 180:            aa -= 360        return R, ata, aa, atan
    def setUp(self):        pass        #sys.path.insert(0, "../rl-src")
    def test_get_R_ata_aa_from_state(self):        state = "99|-10|-10"        R, ata, aa, dv = rl_utils.get_R_ata_aa_from_state(state)        self.assertEqual(R, 99, "R is wrong")        self.assertEqual(ata, -10, "ata is wrong")        self.assertEqual(aa, -10, "aa is wrong")
        state = "99|-10|-10|-20"        R, ata, aa, dv = rl_utils.get_R_ata_aa_from_state(state)        self.assertEqual(R, 99, "R is wrong")        self.assertEqual(ata, -10, "ata is wrong")        self.assertEqual(aa, -10, "aa is wrong")        self.assertEqual(dv, -20, "aa is wrong")    def print_pos(self, blue, red):        print('Blue: (' + str(blue.x) + ', ' + str(blue.y) + ', ' + str(blue.psi) + ')' \              ', Red: (' + str(red.x) + ', ' + str(red.y) + ', ' + str(red.psi) + ')')        aa = utils.get_aspect_angle(blue, red)        bearing = utils.get_bearing_angle(blue, red)        ata = utils.get_antenna_train_angle(blue, red)        range = utils.get_range(blue, red)        mcgrew_range = utils.mcgrew_range(range)        mcgrew_angle = utils.mcgrew_angle(aa, ata)        print('aa:', aa, ', bearing:', bearing, ', ata:', ata, ', mcgrew_range:', mcgrew_range, ', mcgrew_angle:', mcgrew_angle)        print()                        def calc(self, blue, red):        los1 = utils.calc_los_angle(blue.x, blue.y, red.x, red.y)        los2 = utils.calc_los_angle(red.x, red.y, blue.x, blue.y)        ba1, ba2, aa1, aa2 = utils.calc_ba_aa(los1, los2, blue.psi, red.psi)        print('aa:', aa1, ", ba:", ba1)        def test_get_R_ata_aa(self):        blue = Fighter(0, 0, 0); red = Fighter(1500, 0, 0)        self.print_pos(blue, red)        blue = Fighter(0, 0, 0); red = Fighter(1000, 0, 0)        self.print_pos(blue, red)        blue = Fighter(0, 0, 0); red = Fighter(100, 0, 0)        self.print_pos(blue, red)        blue = Fighter(0, 0, 0); red = Fighter(10, 0, 0)        self.print_pos(blue, red)        blue = Fighter(0, 0, 0); red = Fighter(1, 0, 0)        self.print_pos(blue, red)                blue = Fighter(0, 0, 30); red = Fighter(1500, 0, 45)        self.print_pos(blue, red)        #self.calc(blue, red)